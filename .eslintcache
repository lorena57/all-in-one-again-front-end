[{"/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/HomePage.js":"1","/Users/Lorena/Development/code/all-in-one-again-front-end/src/App.js":"2","/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/CardSection.js":"3","/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/ContactForm.js":"4","/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/Nav.js":"5","/Users/Lorena/Development/code/all-in-one-again-front-end/src/actions/noteActions.js":"6","/Users/Lorena/Development/code/all-in-one-again-front-end/src/containers/Contacts.js":"7","/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/NoteForm.js":"8","/Users/Lorena/Development/code/all-in-one-again-front-end/src/containers/Notes.js":"9","/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/Note.js":"10"},{"size":193,"mtime":1606873147748,"results":"11","hashOfConfig":"12"},{"size":823,"mtime":1606874214657,"results":"13","hashOfConfig":"12"},{"size":4220,"mtime":1606874164912,"results":"14","hashOfConfig":"12"},{"size":2334,"mtime":1606873122883,"results":"15","hashOfConfig":"12"},{"size":1325,"mtime":1606874170460,"results":"16","hashOfConfig":"12"},{"size":683,"mtime":1606797110901,"results":"17","hashOfConfig":"12"},{"size":2329,"mtime":1606873775301,"results":"18","hashOfConfig":"12"},{"size":1497,"mtime":1606873176753,"results":"19","hashOfConfig":"12"},{"size":1504,"mtime":1606880783320,"results":"20","hashOfConfig":"12"},{"size":264,"mtime":1606880861099,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hrl2v9",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/HomePage.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/App.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/CardSection.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/ContactForm.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/Nav.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/actions/noteActions.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/containers/Contacts.js",["43"],"import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { fetchContacts, setUser} from \"../actions/contactActions\";\n\n class Contacts extends Component {\n\n    componentWillMount() {\n        this.props.fetchContacts();\n    }\n\n     handleOnClick = userId => {\n         this.props.setUser(userId);\n     }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if (nextProps.newContact) {\n    //         this.props.contacts.unshift(nextProps.newContact)\n    //     }\n    // }\n\n    render() {\n\n        const contacts = this.props.contacts;\n        let renderList = 'No Users';\n\n        if (contacts) {\n            renderList = contacts.map(list => {\n                return (<a onClick={() => this.handleOnClick(list.id)} key={list.id}><br/>{list.first_name}<br/></a>)\n            })\n        }\n\n        const currentUser = this.props.currentUser;\n        let userDetails = 'No User Selected';\n        if (currentUser) {\n            userDetails = `Hi, my name is ${currentUser.first_name}`;\n        }\n\n        const contactItems = this.props.contacts.map(contact => (\n            <div key={contact.id}>\n                <h3>First Name: {contact.first_name}</h3>\n                <h3>Last Name: {contact.last_name}</h3>\n                <h3>Email Address: {contact.email_address}</h3>\n                <h3>Contact Number: {contact.phone_number}</h3>\n                <br/>\n                \n            </div>\n        ))\n        return (\n            \n            <div>\n                <div >\n                    {renderList}\n                    <br/>\n                </div>\n\n                <div>\n                    <div>\n                        {userDetails}\n                    </div>\n                </div>\n\n                <div>  \n                    <h1>Contact</h1>\n                    <div>{contactItems}</div>\n                \n                </div>\n              \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.contacts,\n    newContact: state.contacts.contact,\n    currentUser: state.contacts.userId ? state.contacts.contacts.filter(user => user.id === state.contacts.userId)[0] : null\n\n});\n\n// export default connect(mapStateToProps, { fetchContacts })(Contacts);\n\nexport default connect(mapStateToProps, { fetchContacts, setUser })(Contacts);","/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/NoteForm.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/containers/Notes.js",[],"/Users/Lorena/Development/code/all-in-one-again-front-end/src/components/Note.js",[],{"ruleId":"44","severity":1,"message":"45","line":28,"column":25,"nodeType":"46","endLine":28,"endColumn":86},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]